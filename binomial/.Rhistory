knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(4,2)
bin_choose(4, 1:3)
bin_choose(4, 1:3)
bin_choose(4, 1:3)
bin_choose<-function(n, k){
result<-c()
for (i in (1:length(k))){
if (k[i]>n){
stop("k cannot be greater than n")
}
else{
result_1<- (factorial(n)/(factorial(n-k[i])*factorial(k[i])))
result<-c(result, result_1)
}
}
return (result)
}
bin_choose(4, 1:3)
bin_choose(4, 1:3)
bin_choose(4,2)
source('~/binomial/R/function.R', echo=TRUE)
bin_choose(4,2)
bin_choose(4, 1:3)
bin_choose(4, 1:3)
bin_choose(4,2)
source('~/binomial/R/function.R', echo=TRUE)
library(binomial)
bin_choose(4, 1:3)
bin_choose(4, 1:3)
bin_choose(4,2)
bin_choose(4, 1:3)
bin_choose<-function(n, k){
result<-c()
for (i in (1:length(k))){
if (k[i]>n){
stop("k cannot be greater than n")
}
else{
result_1<- (factorial(n)/(factorial(n-k[i])*factorial(k[i])))
result<-c(result, result_1)
}
}
return (result)
}
bin_choose(5,(1:3))
devtools::document()
library(binomial)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
bin_choose(4, 1:3)
source('~/binomial/R/function.R', echo=TRUE)
devtools::document()
devtools::document()
devtools::document()
#library(devtools)
# =====================================================
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
devtools::build()             # build bundle
devtools::install()
#toss100 <- toss(mycoin, times = 100)
#toss100
plot.bincum(bin_cumulative(5,0.4))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
#combinations in which there are 4 trials and 1 success, 2 success, 3 success
bin_choose(4, 1:3)
#toss100 <- toss(mycoin, times = 100)
#toss100
plot.bincum(bin_cumulative(5,0.4))
bin_cumulative(5,0.4)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#toss100 <- toss(mycoin, times = 100)
#toss100
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.4)
#toss100 <- toss(mycoin, times = 100)
#toss100
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
bin_cumulative<-function(trials, prob){
result_new<-c()
success<-(0:trials)
for (i in success){
result<-bin_probability(i, trials, prob)
result_new<-c(result_new, result)
}
result_2<-c()
for (i in 1: length(result_new)){
if (i==1){
previous<-0
current<-result_new[i]
}
else{
previous<-current+previous
current<-result_new[i]
}
result_2<-c(result_2, previous+current)
}
df_new<-data.frame(success, 'probability'=result_new, 'cumulative'=result_2)
class(df_new)<-c("bincum", "data.frame")
return (df_new)
}
bin_cumulative(5, 0.5)
devtools::document()
#toss100 <- toss(mycoin, times = 100)
#toss100
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
#combinations in which there are 4 trials and 1 success, 2 success, 3 success
bin_choose(4, 1:3)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
library(binomial)
library(binomial)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
#combinations in which there are 4 trials and 1 success, 2 success, 3 success
bin_choose(4, 1:3)
plot.bincum(bin_cumulative(5,0.5))
plot.bincum(bin_cumulative(5,0.5))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
plot.bincum(bin_cumulative(5,0.5))
plot.bincum(bin_cumulative(5,0.5))
source('~/binomial/R/function.R', echo=TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
#combinations in which there are 4 trials and 1 success, 2 success, 3 success
bin_choose(4, 1:3)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
library(binomial)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
#combinations in which there are 4 trials and 1 success, 2 success, 3 success
bin_choose(4, 1:3)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
library(binomial)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
library(binomial)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
#combinations in which there are 4 trials and 1 success, 2 success, 3 success
bin_choose(4, 1:3)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
bin_probability(success=3, trial=6, prob=0.5)
#probability of getting 3 successes in 6 trials assuming probability of success is 0.5
bin_probability(success=3, trial=6, prob=0.5)
#probabilities of getting 5 or less successes in 7 trials assuming probability of success is 0.6
bin_probability(success=0:5, trial=7, prob=0.6)
#binomial probability distribution with 6 trials and probability of 0.7
bin_distribution(trials=6, prob=0.7)
bin_cumulative(trials=6, prob=0.7)
source('~/binomial/R/function.R', echo=TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
library(binomial)
library(binomial)
library(binomial)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#combinations in which there are 4 trials and 1 success, 2 success, 3 success
bin_choose(4, 1:3)
#probability of getting 3 successes in 6 trials assuming probability of success is 0.5
bin_probability(success=3, trial=6, prob=0.5)
#probabilities of getting 5 or less successes in 7 trials assuming probability of success is 0.6
bin_probability(success=0:5, trial=7, prob=0.6)
#binomial probability distribution with 6 trials and probability of 0.7
bin_distribution(trials=6, prob=0.7)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(trials=6, prob=0.7)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
var <- bin_variable(5,0.5)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
var
plot.bincum(bin_cumulative(5,0.5))
var <- bin_variable(5,0.5)
var
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
names(var)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
var$trials
source('~/binomial/R/function.R', echo=TRUE)
plot.bincum(bin_cumulative(5,0.5))
bin_cumulative(5,0.5)
var <- bin_variable(5,0.5)
var$trials
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
library(binomial)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
library(binomial)
library(binomial)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#combinations in which there are 4 trials and two successes
bin_choose(4,2)
var <- bin_variable(5,0.5)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
var
#' @export
print.binvar<-function(var){
cat('"Binomial variable"\n\n')
cat("Parameters\n")
cat("-number of trials:", var$trials)
cat("\n-prob of success:", var$prob)
}
var <- bin_variable(5,0.5)
var
plot.bincum(bin_cumulative(5,0.5))
plot.bincum
library(binomial)
cum <- bin_cumulative(5,0.5)
dis <- bin_distribution(5,0.5)
cum <- bin_cumulative(5,0.5)
dis <- bin_distribution(5,0.5)
plot(cum)
plot(dis)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#plotting binomial cumulative distribution with trials as 5 and probability of success as 0.5
plot(bin_cumulative(5,0.5))
#plotting binomial probability distribution with trials as 5 and probability of success as 0.5
plot(bin_distribution(5, 0.5))
library(binomial)
library(binomial)
cum <- bin_cumulative(5,0.5)
dis <- bin_distribution(5,0.5)
plot(cum)
plot(dis)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
print.binvar(object)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
print(object)
#assigning object to be a binomial variable object with trials as 3 and probability of success as 0.2
object<-bin_variable(3,0.2)
print(object)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
summary(object)
print(object)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
print(object)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
object
object
object
object
source('~/binomial/R/function.R', echo=TRUE)
object
source('~/binomial/R/function.R', echo=TRUE)
summary(object)
source('~/binomial/R/function.R', echo=TRUE)
object
summary(object)
source('~/binomial/R/function.R', echo=TRUE)
object
summary(object)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
object
summary(object)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
bin_mean(5,0.4)
bin_variance(5,0.4)
bin_mode(5,0.4)
bin_skewness(5,0.4)
bin_kurtosis((5,0.4)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
bin_mean(5,0.4)
bin_variance(5,0.4)
bin_mode(5,0.4)
bin_skewness(5,0.4)
bin_kurtosis(5,0.4)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
bin_mean(4, 3)
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
